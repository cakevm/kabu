[package]
name = "kabu"
version.workspace = true
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
# broadcast
kabu-broadcast-accounts = { workspace = true, optional = true }
kabu-broadcast-broadcaster = { workspace = true, optional = true }
kabu-broadcast-flashbots = { workspace = true, optional = true }
# core
kabu-core-actors = { workspace = true, optional = true }
kabu-core-actors-macros = { workspace = true, optional = true }
kabu-core-block-history = { workspace = true, optional = true }
kabu-core-blockchain = { workspace = true, optional = true }
kabu-core-blockchain-actors = { workspace = true, optional = true }
kabu-core-mempool = { workspace = true, optional = true }
kabu-core-router = { workspace = true, optional = true }
kabu-core-topology = { workspace = true, optional = true }
# defi
kabu-defi-abi = { workspace = true, optional = true }
kabu-defi-address-book = { workspace = true, optional = true }
kabu-defi-health-monitor = { workspace = true, optional = true }
kabu-defi-market = { workspace = true, optional = true }
kabu-defi-pools = { workspace = true, optional = true }
kabu-defi-preloader = { workspace = true, optional = true }
kabu-defi-price = { workspace = true, optional = true }
kabu-defi-uniswap-v3-math = { workspace = true, optional = true }
# evm
kabu-evm-db = { workspace = true, optional = true }
kabu-evm-utils = { workspace = true, optional = true }
# execution
kabu-execution-estimator = { workspace = true, optional = true }
kabu-execution-multicaller = { workspace = true, optional = true }
# metrics
kabu-metrics = { workspace = true, optional = true }
# node
kabu-node-actor-config = { workspace = true, optional = true }
kabu-node-db-access = { workspace = true, optional = true }
kabu-node-debug-provider = { workspace = true, optional = true }
kabu-node-exex = { workspace = true, optional = true }
kabu-node-grpc = { workspace = true, optional = true }
kabu-node-grpc-exex-proto = { workspace = true, optional = true }
kabu-node-json-rpc = { workspace = true, optional = true }
kabu-node-player = { workspace = true, optional = true }
# rpc
kabu-rpc-handler = { workspace = true, optional = true }
kabu-rpc-state = { workspace = true, optional = true }
# storage
kabu-storage-db = { workspace = true, optional = true }
# strategy
kabu-strategy-backrun = { workspace = true, optional = true }
kabu-strategy-merger = { workspace = true, optional = true }
# types
kabu-types-blockchain = { workspace = true, optional = true }
kabu-types-entities = { workspace = true, optional = true }
kabu-types-events = { workspace = true, optional = true }

[features]
broadcast = []
core = []
defi = []
evm = []
execution = []
metrics = ["dep:kabu-metrics"]
node = []
rpc = []
storage = []
strategy = []
types = []

broadcast-accounts = ["broadcast", "dep:kabu-broadcast-accounts"]
broadcast-broadcaster = ["broadcast", "dep:kabu-broadcast-broadcaster"]
broadcast-flashbots = ["broadcast", "dep:kabu-broadcast-flashbots"]

core-actors = ["core", "dep:kabu-core-actors"]
core-actors-macros = ["core", "dep:kabu-core-actors-macros"]
core-block-history = ["core", "dep:kabu-core-block-history"]
core-blockchain = ["core", "dep:kabu-core-blockchain"]
core-blockchain-actors = ["core", "dep:kabu-core-blockchain-actors"]
core-mempool = ["core", "dep:kabu-core-mempool"]
core-router = ["core", "dep:kabu-core-router"]
core-topology = ["core", "dep:kabu-core-topology"]

defi-abi = ["defi", "dep:kabu-defi-abi"]
defi-address-book = ["defi", "dep:kabu-defi-address-book"]
defi-health-monitor = ["defi", "dep:kabu-defi-health-monitor"]
defi-market = ["defi", "dep:kabu-defi-market"]
defi-pools = ["defi", "dep:kabu-defi-pools"]
defi-preloader = ["defi", "dep:kabu-defi-preloader"]
defi-price = ["defi", "dep:kabu-defi-price"]
defi-uniswap-v3-math = ["defi", "dep:kabu-defi-uniswap-v3-math"]

evm-db = ["dep:kabu-evm-db", "evm"]
evm-utils = ["dep:kabu-evm-utils", "evm"]

execution-estimator = ["dep:kabu-execution-estimator", "execution"]
execution-multicaller = ["dep:kabu-execution-multicaller", "execution"]

node-actor-config = ["dep:kabu-node-actor-config", "node"]
node-db-access = ["dep:kabu-node-db-access", "node"]
node-debug-provider = ["dep:kabu-node-debug-provider", "node"]
node-exex = ["dep:kabu-node-exex", "node"]
node-grpc = ["dep:kabu-node-grpc", "node"]
node-grpc-exex-proto = ["dep:kabu-node-grpc-exex-proto", "node"]
node-json-rpc = ["dep:kabu-node-json-rpc", "node"]
node-player = ["dep:kabu-node-player", "node"]

rpc-handler = ["dep:kabu-rpc-handler", "rpc"]
rpc-state = ["dep:kabu-rpc-state", "rpc"]

storage-db = ["dep:kabu-storage-db", "storage"]

strategy-backrun = ["dep:kabu-strategy-backrun", "strategy"]
strategy-merger = ["dep:kabu-strategy-merger", "strategy"]

types-blockchain = ["dep:kabu-types-blockchain", "types"]
types-entities = ["dep:kabu-types-entities", "types"]
types-events = ["dep:kabu-types-events", "types"]

full = [
  "broadcast-full",
  "core-full",
  "defi-full",
  "evm-full",
  "execution-full",
  "metrics-full",
  "node-full",
  "rpc-full",
  "storage-full",
  "types-full",
]

full-json-rpc = [
  "broadcast-full",
  "core-full",
  "defi-full",
  "evm-full",
  "execution-full",
  "metrics-full",
  "node-actor-config",
  "node-full",
  "node-json-rpc",
  "storage-full",
  "types-full",
]

full-exex = [
  "broadcast-full",
  "core-full",
  "defi-full",
  "evm-full",
  "execution-full",
  "metrics-full",
  "node-actor-config",
  "node-exex",
  "rpc-full",
  "storage-full",
  "types-full",
]

full-db-access = [
  "broadcast-full",
  "core-full",
  "defi-full",
  "evm-full",
  "execution-full",
  "metrics-full",
  "node-actor-config",
  "node-db-access",
  "rpc-full",
  "storage-full",
  "types-full",
  # enable db access feature for deps
  "kabu-core-blockchain-actors?/db-access",
  "kabu-core-topology?/db-access",
]

broadcast-full = ["broadcast-accounts", "broadcast-broadcaster", "broadcast-flashbots"]
core-full = [
  "core-actors",
  "core-actors-macros",
  "core-block-history",
  "core-blockchain",
  "core-blockchain-actors",
  "core-mempool",
  "core-router",
  "core-topology",
]

defi-full = [
  "defi-abi",
  "defi-address-book",
  "defi-health-monitor",
  "defi-market",
  "defi-pools",
  "defi-preloader",
  "defi-price",
  "defi-uniswap-v3-math",
]
evm-full = ["evm-db", "evm-utils"]
execution-full = ["execution-estimator", "execution-multicaller"]
metrics-full = ["metrics"]
node-full = [
  "node-actor-config",
  "node-db-access",
  "node-debug-provider",
  "node-exex",
  "node-grpc",
  "node-grpc-exex-proto",
  "node-json-rpc",
  "node-player",
]
rpc-full = ["rpc-handler", "rpc-state"]
storage-full = ["storage-db"]
strategy-full = ["strategy-backrun", "strategy-merger"]
types-full = ["types-blockchain", "types-entities", "types-events"]
