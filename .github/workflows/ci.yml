name: CI

on:
  push:
    branches: [ main ]
  pull_request_target:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: make test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      MAINNET_HTTP: ${{ secrets.MAINNET_HTTP }}
      MAINNET_WS: ${{ secrets.MAINNET_WS }}
      RUST_LOG: info
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - run: make test

  swap-test-all:
    name: make swap-test-all
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      MAINNET_HTTP: ${{ secrets.MAINNET_HTTP }}
      MAINNET_WS: ${{ secrets.MAINNET_WS }}
      RUST_LOG: info
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - run: make swap-test-all-ci

  fmt:
    name: make fmt-check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt


      - run: make fmt-check

  taplo:
    name: make taplo-check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: dtolnay/rust-toolchain@clippy
      - name: install taplo
        env:
          version: "0.9.3"
        run: |
          curl -Ls "https://github.com/tamasfe/taplo/releases/download/${{ env.version }}/taplo-full-linux-x86_64.gz" | \
          gzip -d > taplo && \
          chmod +x taplo && \
          sudo mv taplo /usr/local/bin/taplo
      - run: make taplo-check

  unused-deps:
    name: check unused dependencies
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install cargo-machete
        run: cargo install cargo-machete --locked
      - name: Check for unused dependencies
        run: cargo-machete --with-metadata

  clippy:
    name: make clippy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - run: cargo clippy --all-targets --all-features -- -D warnings

  deny:
    name: cargo deny check
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          log-level: warn
          command: check
          arguments: --all-features